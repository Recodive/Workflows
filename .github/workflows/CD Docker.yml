on:
  workflow_call:
    inputs:
      context:
        description: Docker context
        default: .
        required: false
        type: string
      file:
        description: Docker context
        default: ./Dockerfile
        required: false
        type: string
      tags:
        description: Docker Image tags
        required: false
        default: ""
        type: string
      version:
        description: Docker Image version
        required: false
        default: main
        type: string
    secrets:
      GH_NPM_TOKEN:
        description: GitHub NPM Token used to push the image
        required: true
      BUILD_ARGS:
        description: Additional build args for docker builder
        required: false
jobs:
  docker:
    name: Build Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set IMAGE_REPOSITORY env
        if: inputs.tags == ''
        run: echo IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Set IMAGE_REPOSITORY env
        if: inputs.tags != ''
        run: echo IMAGE_REPOSITORY=${{ inputs.tags }} >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ${{ inputs.file  }}
          context: ${{ inputs.context }}
          build-args: |
            "GH_NPM_TOKEN=${{ secrets.GH_NPM_TOKEN }}"
            ${{secrets.BUILD_ARGS}}
          push: true
          tags: ghcr.io/${{ env.IMAGE_REPOSITORY }}:${{ inputs.version }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
